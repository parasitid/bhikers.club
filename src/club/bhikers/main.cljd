(ns club.bhikers.main
  "Bhikers Club App by ParaSitid"
  (:require ["package:flutter/material.dart" :as m]
            ["package:flutter_map/flutter_map.dart" :as map]
            ["package:latlong2/latlong.dart" :as ll]
            ["package:easy_localization/easy_localization.dart" :as l10n]
            ["package:easy_localization_loader/easy_localization_loader.dart" :as l10nassets]
            ["package:flutter_settings_screens/flutter_settings_screens.dart" :as settings]
            ["package:flutter_map_location_marker/flutter_map_location_marker.dart" :as maploc]
            ["package:flutter_map_cancellable_tile_provider/flutter_map_cancellable_tile_provider.dart" :as cmap]
            ["dart:async" :as dart-async]
            [cljd.flutter :as f]))

;; Around me ( +/- 10/20km): POIs*
;; Enhance GPX: upload gpx and add POIs*
;; Fall Detector Alert: use accelerometer to detect fall or no movement
;; Settings: avatar, sms/signal/telegram accounts to send alerts
;;
;; *POIs: bhikers, boulangeries+resto, hotels+campings+spots, points d'eau

(defonce supported-locales ["en" "fr" "it" "es" "de"])
(defonce default-locale "en")
(defonce supported-poi-types ["bhikers" "shelters"
                              "hotels" "campsites"
                              "restaurants" "bakeries"
                              "bikeshops" "bottlerefills"])

(defonce default-poi-type "shelters")

(defn drawer []
  (f/widget
   :get [m/Navigator]
   :let [drawer-routes [["/around-me"
                         (l10n/tr "around_me.screen_title")
                         m/Icons.location_pin]
                        ["/enhance-gpx"
                         (l10n/tr "enhance_gpx.screen_title")
                         m/Icons.hotel_class_outlined]
                        ["/fall-detector"
                         (l10n/tr "fall_detector.screen_title")
                         m/Icons.crisis_alert]
                        ["/settings"
                         (l10n/tr "settings.screen_title")
                         m/Icons.settings]
                        ["/about"
                         (l10n/tr "about.screen_title")
                         m/Icons.info]]]
   m/Drawer
   (m/ListView
    .padding (m/EdgeInsets.all 20)
    .children (into [(m/UserAccountsDrawerHeader
                      .accountName (m/Text "John Doe")
                      .accountEmail (m/Text "johndoe@example.com")
                      .currentAccountPicture (m/CircleAvatar .child (m/Text "JD")))]
                    (map (fn [[route title icon]]
                           (m/ListTile
                            .leading (m/Icon icon)
                            .title (m/Text title)
                            .onTap
                            (fn []
                              (.pop navigator)
                              (.pushNamed navigator route)
                              nil)))
                         drawer-routes)))))


(defn around-me-enddrawer []
  (f/widget
   :get [:selected-poi-type
         m/Navigator]
   :watch [selected-value selected-poi-type]
   m/Drawer
   (m/ListView
    .padding (m/EdgeInsets.all 20)
    .children
    (map (fn [poi] (m/RadioListTile
                    .title (m/Text (l10n/tr (str "around_me.pois." poi)))
                    .value poi
                    .groupValue selected-value
                    .onChanged (fn [val] (swap! selected-poi-type (constantly val))
                                 (.pop navigator))))
         supported-poi-types))))



(defn app-bar []
  (m/AppBar .title (m/Text (l10n/tr "app.title"))))

(defn around-me-screen []
  (f/widget
   :bind {:selected-poi-type (atom default-poi-type)}
   (m/Scaffold
    .appBar (app-bar)
    .drawer (drawer)
    .endDrawer (around-me-enddrawer)
    .body
    (f/widget
     :managed [align-position-stream-controller (#/(dart-async/StreamController double?))
               :dispose .close]
     :watch [align-position-on-update (atom maploc/AlignOnUpdate.always) :as *align-position-on-update]
     (map/FlutterMap
      .options (map/MapOptions
                .initialZoom 12
                .minZoom 0
                .maxZoom 16
                .onPositionChanged (fn [camera hasGesture]
                                     (when (and hasGesture
                                                (not= align-position-on-update maploc/AlignOnUpdate.never))
                                       (reset! *align-position-on-update maploc/AlignOnUpdate.never))))

      .children
      [(map/TileLayer
        .urlTemplate "https://tile.openstreetmap.org/{z}/{x}/{y}.png"
        .userAgentPackageName "club.bhikers"
        .tileProvider (cmap/CancellableNetworkTileProvider)
        .maxZoom 19)
       (maploc/CurrentLocationLayer
        .alignPositionStream (.-stream align-position-stream-controller)
        .alignPositionOnUpdate align-position-on-update)
       (m/Align
        .alignment m/Alignment.bottomRight
        .child (m/Padding .padding (m/EdgeInsets.all 20.0)
                          .child (m/FloatingActionButton
                                  .onPressed (fn [] (do
                                                      (reset! *align-position-on-update maploc/AlignOnUpdate.never)
                                                      (.add align-position-stream-controller 12)))
                                  .child (m/Icon m/Icons.my_location .color m/Colors.white))))
       (map/Scalebar
        .textStyle (m/TextStyle .color m/Colors.black .fontSize 14)
        .alignment m/Alignment.bottomLeft
        .length map/ScalebarLength.m)])))))



(defn enhance-gpx-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text (l10n/tr "enhance_gpx.description") .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(defn fall-detector-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text (l10n/tr "fall_detector.description") .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(defn settings-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          :context ctx
          m/Container
          (settings/SettingsScreen
           .title  (l10n/tr "settings.screen_title")
           .children
           [(settings/SettingsGroup
             .title  (l10n/tr "settings.general_group_title")
             .children
             [(#/(settings/DropDownSettingsTile String)
               .leading (m/Icon m/Icons.language)
               .settingKey "/general/language"
               .title  (l10n/tr "settings.language")
               .values (into {} (map (fn [lang] [lang (l10n/tr (str "settings.langs." lang))])
                                     supported-locales))
               .selected default-locale
               .onChange #(do (m/debugPrint (str "selected lang " %))
                              (-> ctx l10n/BuildContextEasyLocalizationExtension (.setLocale (m/Locale %)))
                              nil))])

            (settings/SettingsGroup
             .title  (l10n/tr "settings.fall_detector_group_title")
             .children
             [(settings/SwitchSettingsTile
               .leading (m/Icon m/Icons.crisis_alert)
               .settingKey "/fall-detector/alert-mode"
               .title (l10n/tr "settings.alert_mode")
               .onChange #(m/debugPrint (str "switched fall-detector-mode to " %))
               .childrenIfEnabled
               [(settings/TextInputSettingsTile
                 .settingKey "/fall-detector/emergency-contact-phone-number"
                 .title (l10n/tr "settings.emerengcy_contact_phone_number")
                 .validator #(do (m/debugPrint (str "phone number " %))
                                 nil)
                 .initialValue  "+33000000000")])])]))))

(defn about-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text (l10n/tr "about.description") .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(def theme
  (m/ThemeData
    .colorSchemeSeed m/Colors.blue
    .useMaterial3 true
    .textTheme (m/TextTheme
                 .displayLarge (m/TextStyle
                                 .fontWeight m/FontWeight.w700
                                 .fontSize 24
                                 .color m/Colors.black))))

(defn main []
  (do
    (settings/Settings.init .cacheProvider (settings/SharePreferenceCache))
    (m/WidgetsFlutterBinding.ensureInitialized)
    (await (l10n/EasyLocalization.ensureInitialized))
    (f/run
      (f/widget
       (l10n/EasyLocalization
        .supportedLocales (map #(m/Locale %) supported-locales)
        .fallbackLocale (m/Locale default-locale)
        .saveLocale true
        .useOnlyLangCode true
        .useFallbackTranslations true
        .assetLoader (l10nassets/YamlAssetLoader)
        .path "src/resources/langs")
       (f/widget
        :context ctx
        (m/MaterialApp
         .localizationsDelegates (-> ctx l10n/BuildContextEasyLocalizationExtension .localizationDelegates)
         .supportedLocales (-> ctx l10n/BuildContextEasyLocalizationExtension .supportedLocales)
         .locale (-> ctx l10n/BuildContextEasyLocalizationExtension .locale)
         .initialRoute "/around-me"
         .theme theme
         .routes (into {}
                       (keep (fn [[k v]] {k (fn ^m/Widget k [_] (v))}))
                       {"/around-me" around-me-screen
                        "/enhance-gpx" enhance-gpx-screen
                        "/fall-detector" fall-detector-screen
                        "/settings" settings-screen
                        "/about" about-screen})))))))

(ns acme.main
  "Bhikers Club App by ParaSitid"
  (:require ["package:flutter/material.dart" :as m]
            ["package:flutter_map/flutter_map.dart" :as map]
            ["package:latlong2/latlong.dart" :as ll]
            ["package:settings_ui/settings_ui.dart" :as settings]
            ["package:flutter_map_location_marker/flutter_map_location_marker.dart" :as maploc]
            [cljd.flutter :as f]))

;; Around me ( +/- 10/20km): POIs*
;; Enhance GPX: upload gpx and add POIs*
;; Fall Detector Alert: use accelerometer to detect fall or no movement
;; Settings: avatar, sms/signal/telegram accounts to send alerts
;;
;; *POIs: bhikers, boulangeries+resto, hotels+campings+spots, points d'eau

(defn drawer []
  (f/widget
   :get [m/Navigator]
   :let [drawer-routes [["/around-me"
                         "Around Me"
                         m/Icons.location_pin]
                        ["/enhance-gpx"
                         "Enhance GPX"
                         m/Icons.hotel_class_outlined]
                        ["/fall-detector"
                         "Fall detector"
                         m/Icons.crisis_alert]
                        ["/settings"
                         "Settings"
                         m/Icons.settings]
                        ["/about"
                         "About"
                         m/Icons.info]]]
   m/Drawer
   (m/ListView
    .padding (m/EdgeInsets.all 20)
    .children (into [(m/UserAccountsDrawerHeader
                      .accountName (m/Text "John Doe")
                      .accountEmail (m/Text "johndoe@example.com")
                      .currentAccountPicture (m/CircleAvatar .child (m/Text "JD")))]
                    (map (fn [[route title icon]]
                           (m/ListTile
                            .leading (m/Icon icon)
                            .title (m/Text title)
                            .onTap
                            (fn []
                              (.pop navigator)
                              (.pushNamed navigator route)
                              nil)))
                         drawer-routes)))))

(defn app-bar []
  (m/AppBar .title (m/Text "Bhikers Club")))

(defn around-me-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (map/FlutterMap
          .options (map/MapOptions
                    .initialCenter (ll/LatLng 47.16760 -1.47182)
                    .initialZoom 12
                    .minZoom 0
                    .maxZoom 16)
          .children
          [(map/TileLayer
            .urlTemplate "https://tile.openstreetmap.org/{z}/{x}/{y}.png"
            .userAgentPackageName "net.tlserver6y.flutter_map_location_marker.example"
            .maxZoom 19)
           (maploc/CurrentLocationLayer)])))


(defn enhance-gpx-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text "Enhance GPX trace with the POIs all along!" .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(defn fall-detector-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text "Send alert to contacts if fall detected using accelerometer!" .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(defn settings-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text "setup contacts to be alerted and stuff" .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(defn about-screen []
  (m/Scaffold
   .appBar (app-bar)
   .drawer (drawer)
   .body (f/widget
          m/Center
          (m/Text "Bhikers Club by ParaSitid" .style (m/TextStyle .color m.Colors/red .fontSize 32.0)))))

(def theme
  (m/ThemeData
    .colorSchemeSeed m/Colors.green
    .useMaterial3 true
    .textTheme (m/TextTheme
                 .displayLarge (m/TextStyle
                                 .fontWeight m/FontWeight.w700
                                 .fontSize 24
                                 .color m/Colors.black))))
(def routes
  {"/around-me" (around-me-screen)
   "/enhance-gpx" (enhance-gpx-screen)
   "/fall-detector" (fall-detector-screen)
   "/settings" (settings-screen)
   "/about" (about-screen)})

(defn main []
  (f/run
    (m/MaterialApp
     .initialRoute "/around-me"
     .theme theme
     .routes (into {}
                   (keep (fn [[k v]]
                           {k (fn ^m/Widget k [_] v)}))
                   routes))))
